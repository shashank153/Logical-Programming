Q1:1.	WAP to accept an Array input from an User. and find the Sum of Numbers of each array.

sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007; int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

int n,sum=0; cin>>n; vector<int> arr;
for(int i=0; i<n; i++){ cin>>arr[i]; sum+=arr[i];
}
cout<<sum; return 0;
}

Q2: 2.	WAP to accept an Array input from an User. and find the Average of Numbers of each array

sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007; int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

ld n,sum=0; cin>>n; vector<int> arr;
for(ld i=0; i<n; i++){
cin>>arr[i]; sum+=arr[i];
}
cout<<sum/n; return 0;
}


Q3:3.	WAP to accept an Array to accept a Month number and Display the numbr of days that months has.(Eq- March- 31)

Sol: 

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;
int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

ld n,sum=0; cout<<"enter month "; cin>>n;
vector<int> arr= {31,29,31,30,31,30,31,31,30,31,30,31};

cout<<"days are"<<arr[n-1]; return 0;
}

Q4: 4.	WAP to assign a set of numbers in an Array and display it is Reverse

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;
int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

ld  n,sum=0; cin>>n;  vector<int> arr(n);
for(int i=0; i<n;i++){
cin>>arr[i];
}
for(auto it = arr.rbegin(); it != arr.rend(); it++){ cout<<*it<<" ";
}
return 0;
}

Q5: 5.	WAP to assign some values in two arrays an merge them into third array. // one int 2 nd array sorting order

Sol: 

#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull; typedef long long ll;
typedef long double ld;

ll infi = 1000000007;

int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

ll n,m; cin>>n>>m;
vector<int> arr(n); vector<int> brr(m); vector<int> crr; for(int i=0; i<n;i++){
cin>>arr[i];
}
for(int i=0; i<m;i++){ cin>>brr[i];
}
int  i=0,j=0; while(i <n && j <m){
if(arr[i] < brr[j]){ crr.push_back(arr[i]); i++;
}else{
crr.push_back(brr[j]); j++;
}
}
while(i<n){
crr.push_back(arr[i]); i++;
}
while(j<m){
crr.push_back(brr[j]); j++;
}
for(auto it : crr){ cout<<it<<" ";
}
return 0;
}


Q6:	WAP to accept 10 numbers in an array and search a given number, if the number exists display its position (index) else display a suitable message.(Linear Search)

Sol:
#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007; int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); for(int i =0; i<10; i++){
cin>>arr[i];
}
int n;
cout<< "enter number"; cin>>n;
for(int i=0; i<n; i++){ if(arr[i] == n){
cout<<"found at"<<i+1; return 0;
}
}
cout<<"not found"; return 0;
}

Q7: WAP to accept 5 numbers in an array and search a given number. If the number exists display its frequency else display a suitable message

Solution:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007;

int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); for(int i =0; i<10; i++){
cin>>arr[i];
}
int n;
cout<< "enter number"; cin>>n;
for(int i=0; i<n; i++){ if(arr[i] == n){
cout<<"found at"<<i+1; return 0;
}
}
cout<<"not found in the array"; return 0;
}


Q 8.	WAP to accept 10 numbers in an array and search a given number, if the number exists display its position (index) else display a suitable message.(Binary Search)

Sol:
#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007; int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); for(int i =0; i<10; i++){
cin>>arr[i];
}
int n;
cout<< "enter number"; cin>>n;
int start =0; int end = 9;
while(start < end){
int mid = end+start/2;
if(mid == n){
cout<<mid; return 0;
}else{
if(arr[mid] > n){ end = mid-1;
}else{
start =	mid+1;
}
}
}
cout<<"not found"; return 0;
}


Q9: AP to assign 10 numbers in an array and Sort it is ascending order using Bubble sort technique.

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;
int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); for(int i =0; i<10; i++){
cin>>arr[i];
}

for(int i=0; i<10;i++){
for(int j=0 ; j<10-i; j++){ if(arr[j] > arr[j+1] ){
int temp = arr[j]; arr[j]=arr[j+1]; arr[j+1]=temp;
}
}
}

for(int i =0; i<10; i++){ cout<<arr[i]<<" ";
}
return 0;
}


Q10: WAP to assign 10 numbers in an array and Sort it is ascending order using Selection sort technique

Sol:

#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull; typedef long long ll;
typedef long double ld;

ll infi = 1000000007;

int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10);
for (int i = 0; i < 10; i++)
{
cin >> arr[i];
}

for (int i = 0; i < 10; i++)
{
int min_idx = i;
for (int j = i+1; j < 10 ; j++)
{
if (arr[j] < arr[min_idx]) min_idx = j;
}
int temp = arr[i]; arr[i] = arr[min_idx]; arr[min_idx] = temp;
}

for (int i = 0; i < 10; i++)
{
cout << arr[i] << " ";
}
return 0;
}

Q11: 11.	WAP to accept N integers from user and Count how many of them are positive.

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007; int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

int count=0; vector<int> arr(10);
for (int i = 0; i < 10; i++)
{
cin >> arr[i]; if(arr[i] > 0){ count++;
}
}

cout<<count; return 0;
}


Q12: 12.	WAP to accept N integers from user and find average of Even elements present in it.

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld;
ll infi = 1000000007; int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

int count=0, cou=0; vector<int> arr(10);
for (int i = 0; i < 10; i++)
{
cin >> arr[i]; if!((i & 1)){
count+= arr[i]; cou++;
}
}

cout<<count/cou; return 0;

Q13: WAP to accept N inetegers from user and find the Largest/Smallest element in an array.

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;
int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10);
for (int i = 0; i < 10; i++)
{
cin >> arr[i];
}
sort(arr.begin(),arr.end());
cout<<"smalest is"<<arr[0]<<" "<<"largest is"<<arr[9]; return 0;
}


Q14: WAP to accept N integers from user and find the Second largest/Second Smallest element.

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;
int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10);
for (int i = 0; i < 10; i++)
{
cin >> arr[i];
}
sort(arr.begin(),arr.end());
cout<<"2nd smalest is"<<arr[1]<<" "<<"2nd largest is"<<arr[8];
return 0;
}

Q15:WAP to find the Prime numbers present in a predefined integer array.

Sol:

#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull; typedef long long ll;
typedef long double ld;

ll infi = 1000000007;

bool isPrime(int n)
{
// Corner cases if (n <= 1)
return false; if (n <= 3)
return true;

// This is checked so that we can skip
// middle five numbers in below loop if (n % 2 == 0 || n % 3 == 0)
return false;

for (int i = 5; i * i <= n; i = i + 6) if (n % i == 0 || n % (i + 2) == 0)
return false;

return true;
}


int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10);
for (int i = 0; i < 10; i++)
{
cin >> arr[i]; if(isPrime(arr[i])){
cout<<arr[i];
}
}
return 0;
}


Q16: 16.	WAP to accept 10 integers in an array and display the non-repeating Array (eq- 1, 2 , 3, 5, 6, 7, 2, 3 , 5)--- 1,6,7

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;

int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); set<int>st;
for (int i = 0; i < 10; i++)
{
cin >> arr[i]; st.insert(arr[i]);
}
for(auto it:st){ cout<<it<<" ";
}
return 0;
}


17.	WAP to assign 10 integers in an array and extract the even element in to m sorted another array

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;

int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); vector<int> brr;
for (int i = 0; i < 10; i++)
{
cin >> arr[i]; if(!(arr[i]&1)){
brr.push_back(arr[i]);
}
}
sort(brr.begin(),brr.end()); for(auto it:brr){
cout<<it<<" ";
}
return 0;
}

Q18: WAP to accept 10 integers in an array and display the frequency of each Distinct element. (eq- 5,5,6,7,7,8,9,1)--- 5,6,7,8,9,1 sort

Sol:

#include <bits/stdc++.h> using namespace std;
typedef unsigned long long ull; typedef long long ll;
typedef long double ld; ll infi = 1000000007;

int main()
{
ios_base::sync_with_stdio(false); cin.tie(NULL);

vector<int> arr(10); map<int,int> mp;
for (int i = 0; i < 10; i++)
{
cin >> arr[i]; mp[arr[i]]++;
}
for(auto it : mp){ cout<<it<<" ";
}
return 0;
}










